pipeline {
  agent {
    docker {
      image 'abhishekf5/maven-abhishek-docker-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
    }
  }
  stages {
    stage('checkout'){
      steps {
        sh 'echo passed'
        git branch: 'main', url: 'https://github.com/eswar293/python_jenkins/'
      }
    }
    stage('Build and Test') {
      steps {
          sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
      }
    }
    stage('static code analysis') {
      environment {
        SONAR_url = "http://13.218.154.54:9000/"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarquebe', variable: 'Sonar_Auth_Type')]) {
          sh 'cd /Users/eswarkumar/jenkins/python_jenkins/java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar -Dsoniar.login=$Sonar_Auth_Type -Dsonar.host.url=${SONAR_url}'
         }
      }
    }
    stage('build and push docker iamges') {
      environment {
        Docker_Image = "abhishekf5/maven-abhishek-docker-agent:${BUILD_NUMBER}"
        // DockerFile_Location = "/Users/eswarkumar/jenkins/python_jenkins/java-maven-sonar-argocd-helm-k8s/spring-boot-app/Dockerfile"
        REGISTRY_CREDENTIALS = credentials('docker-cred')
      }
      steps {
        script {
          sh 'cd /Users/eswarkumar/jenkins/python_jenkins/java-maven-sonar-argocd-helm-k8s/spring-boot-app/ && docker build -t ${Docker_Image} .'
          def dockerImage = docker.image("${Docker_Image}")
          docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
            dockerImage.Push()
          }
        }
      }
      stage('update deployment file') {
        environment {
          GIT_REPO_NAME = "python_jenkins"
          GIT_USER_NAME = "eswar293"
        }
        steps {
          withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                sh '''
                    git config user.email "eswarpkumar@gmail.com"
                    git config user.name "Eswar Kumar Padavala"
                    BUILD_NUMBER=${BUILD_NUMBER}
                    sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                    git add /Users/eswarkumar/jenkins/python_jenkins/java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                    git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                '''
          }
        }
      }
    }
  }
}